// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "window.h"
#if 1
#pragma warning(disable: 4311)
#pragma warning(disable: 4312)
#endif

Fl_Double_Window *MainWindow=(Fl_Double_Window *)0;

Fl_Output *MusicTitleDisplay=(Fl_Output *)0;

Fl_Value_Slider *PlayPositionSlider=(Fl_Value_Slider *)0;

Fl_Light_Button *PlayButton=(Fl_Light_Button *)0;

Fl_Light_Button *LoopButton=(Fl_Light_Button *)0;

Fl_File_Browser *FileBrowser=(Fl_File_Browser *)0;

Fl_Repeat_Button *DirectoryButton=(Fl_Repeat_Button *)0;

Fl_Output *PathDisplay=(Fl_Output *)0;

Fl_Value_Slider *SpeedSlider=(Fl_Value_Slider *)0;

Fl_Value_Slider *VolumeSlider=(Fl_Value_Slider *)0;

Fl_Value_Slider *PanSlider=(Fl_Value_Slider *)0;

Fl_Double_Window* createPlayerWindow() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = MainWindow = new Fl_Double_Window(419, 294);
    w = o;
    o->box(FL_PLASTIC_UP_BOX);
    o->color((Fl_Color)48);
    o->selection_color((Fl_Color)35);
    o->labelsize(8);
    o->labelcolor((Fl_Color)198);
    { Fl_Output* o = MusicTitleDisplay = new Fl_Output(10, 5, 400, 30);
      o->color((Fl_Color)33);
      o->labelfont(4);
      o->labelsize(11);
      o->labelcolor(FL_RED);
      o->textfont(1);
      o->textcolor(48);
    }
    { Fl_Value_Slider* o = PlayPositionSlider = new Fl_Value_Slider(10, 33, 400, 20);
      o->type(1);
      o->labelsize(11);
      o->textsize(11);
      o->callback((Fl_Callback*)OnSliderMoved);
    }
    { Fl_Light_Button* o = PlayButton = new Fl_Light_Button(10, 62, 45, 26, "@>");
      o->tooltip("Play/Pause");
      o->labelsize(11);
      o->labelcolor((Fl_Color)24);
      o->callback((Fl_Callback*)OnPlayPressed);
    }
    { Fl_Light_Button* o = LoopButton = new Fl_Light_Button(60, 62, 45, 26, "@reload");
      o->tooltip("Loop");
      o->labelsize(11);
      o->labelcolor((Fl_Color)24);
      o->callback((Fl_Callback*)OnLoopPressed);
    }
    { Fl_File_Browser* o = FileBrowser = new Fl_File_Browser(10, 115, 400, 150);
      o->color((Fl_Color)55);
      o->selection_color((Fl_Color)40);
      o->labelsize(11);
      o->textsize(11);
      o->textcolor(32);
      o->callback((Fl_Callback*)OnBrowserChanged);
      o->when(3);
    }
    { Fl_Button* o = new Fl_Button(388, 62, 20, 26, "?");
      o->tooltip("About");
      o->labelsize(11);
      o->callback((Fl_Callback*)OnAbout);
    }
    { Fl_Repeat_Button* o = DirectoryButton = new Fl_Repeat_Button(365, 266, 45, 20, "[drive]");
      o->tooltip("Select drive to browse");
      o->labelsize(11);
      o->callback((Fl_Callback*)OnDirectoryButton);
    }
    { Fl_Output* o = PathDisplay = new Fl_Output(10, 267, 350, 20);
      o->color((Fl_Color)48);
      o->labelsize(11);
      o->textsize(11);
      o->deactivate();
    }
    { Fl_Button* o = new Fl_Button(338, 62, 45, 26, "@+3<->");
      o->tooltip("Show/Hide Playlist");
      o->labelsize(8);
      o->labelcolor((Fl_Color)24);
      o->callback((Fl_Callback*)OnTogglePlayList);
    }
    { Fl_Value_Slider* o = SpeedSlider = new Fl_Value_Slider(205, 60, 115, 15, "playback speed:");
      o->type(1);
      o->labelsize(11);
      o->maximum(5);
      o->value(1);
      o->textsize(11);
      o->callback((Fl_Callback*)OnPlaybackSpeedChanged);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Value_Slider* o = VolumeSlider = new Fl_Value_Slider(205, 74, 115, 15, "volume:");
      o->type(1);
      o->labelsize(11);
      o->value(1);
      o->textsize(11);
      o->callback((Fl_Callback*)OnVolumeSliderChanged);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Value_Slider* o = PanSlider = new Fl_Value_Slider(205, 87, 115, 15, "pan:");
      o->type(1);
      o->labelsize(11);
      o->minimum(-1);
      o->textsize(11);
      o->callback((Fl_Callback*)OnPanSliderChanged);
      o->align(FL_ALIGN_LEFT);
    }
    o->end();
  }
  return w;
}
